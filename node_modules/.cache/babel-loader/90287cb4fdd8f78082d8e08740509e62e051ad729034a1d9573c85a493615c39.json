{"ast":null,"code":"var _jsxFileName = \"/Users/saba/Desktop/gptchat/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport ChatBox from \"./ChatBox\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const [currentValue2, setCurrentValue2] = useState(\"\");\n  const [userId1] = useState(\"User1\");\n  const [userId2] = useState(\"User2\");\n  const onSend = () => {\n    setMessages([...messages, currentValue]);\n    setCurrentValue(\"\");\n  };\n  const onSend2 = () => {\n    setMessages([...messages, currentValue2]);\n    setCurrentValue2(\"\");\n  };\n  const getValue = e => {\n    return setCurrentValue(e.target.value);\n  };\n  const getValue2 = e => {\n    setCurrentValue2(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      messageArr: messages,\n      userId: userId1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      userId: userId1,\n      inputChange: getValue,\n      send: onSend,\n      current: currentValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      messageArr: messages,\n      userId: userId2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      userId: userId2,\n      inputChange: getValue2,\n      send: onSend2,\n      current: currentValue2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z9JG1c3Uaw6E5pgyy7JdgKLPnWU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ChatBox","Input","jsxDEV","_jsxDEV","App","_s","messages","setMessages","currentValue","setCurrentValue","currentValue2","setCurrentValue2","userId1","userId2","onSend","onSend2","getValue","e","target","value","getValue2","className","children","messageArr","userId","fileName","_jsxFileName","lineNumber","columnNumber","inputChange","send","current","_c","$RefreshReg$"],"sources":["/Users/saba/Desktop/gptchat/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport ChatBox from \"./ChatBox\";\nimport Input from \"./Input\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const [currentValue2, setCurrentValue2] = useState(\"\");\n  const [userId1] = useState(\"User1\");\n  const [userId2] = useState(\"User2\");\n  const onSend = () => {\n    setMessages([...messages, currentValue]);\n    setCurrentValue(\"\");\n  };\n  const onSend2 = () => {\n    setMessages([...messages, currentValue2]);\n    setCurrentValue2(\"\");\n  };\n  const getValue = (e) => {\n    return setCurrentValue(e.target.value);\n  };\n  const getValue2 = (e) => {\n    setCurrentValue2(e.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <ChatBox messageArr={messages} userId={userId1} />\n      <Input\n        userId={userId1}\n        inputChange={getValue}\n        send={onSend}\n        current={currentValue}\n      />\n      <ChatBox messageArr={messages} userId={userId2} />\n      <Input\n        userId={userId2}\n        inputChange={getValue2}\n        send={onSend2}\n        current={currentValue2}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACnC,MAAM,CAACc,OAAO,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EACnC,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACnBP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEE,YAAY,CAAC,CAAC;IACxCC,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EACD,MAAMM,OAAO,GAAGA,CAAA,KAAM;IACpBR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,aAAa,CAAC,CAAC;IACzCC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EACD,MAAMK,QAAQ,GAAIC,CAAC,IAAK;IACtB,OAAOR,eAAe,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EACD,MAAMC,SAAS,GAAIH,CAAC,IAAK;IACvBN,gBAAgB,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EACD,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,OAAO;MAACuB,UAAU,EAAEjB,QAAS;MAACkB,MAAM,EAAEZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDzB,OAAA,CAACF,KAAK;MACJuB,MAAM,EAAEZ,OAAQ;MAChBiB,WAAW,EAAEb,QAAS;MACtBc,IAAI,EAAEhB,MAAO;MACbiB,OAAO,EAAEvB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFzB,OAAA,CAACH,OAAO;MAACuB,UAAU,EAAEjB,QAAS;MAACkB,MAAM,EAAEX;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDzB,OAAA,CAACF,KAAK;MACJuB,MAAM,EAAEX,OAAQ;MAChBgB,WAAW,EAAET,SAAU;MACvBU,IAAI,EAAEf,OAAQ;MACdgB,OAAO,EAAErB;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAtCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}